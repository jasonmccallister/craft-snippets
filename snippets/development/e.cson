#
# Things that start with CCCCCCCC
#
'.source.php':

  'Element Type':
    'prefix': 'elementtype'
    'body': """
    namespace Craft;

    class $1ElementType extends BaseElementType
    {
        /**
        * Returns the element type name.
        *
        * @return string
        */
        public function getName()
        {
            return Craft::t('$2');
        }

        /**
        * Returns whether this element type has content.
        *
        * @return bool
        */
        public function hasContent()
        {
            return $3;
        }

        /**
        * Returns whether this element type has titles.
        *
        * @return bool
        */
        public function hasTitles()
        {
            return $4;
        }

        /**
        * Returns this element type's sources.
        *
        * @param string|null $context
        * @return array|false
        */
        public function getSources($context = null)
        {
            $sources = $5;

            return $sources;
        }

        /**
        * Returns the attributes that can be shown/sorted by in table views.
        *
        * @param string|null $source
        * @return array
        */
        public function defineTableAttributes($source = null)
        {
            return array(
              '$6' => Craft::t('$7')
            );
        }

        /**
        * Returns the table view HTML for a given attribute.
        *
        * @param BaseElementModel $element
        * @param string $attribute
        * @return string
        */
        public function getTableAttributeHtml(BaseElementModel $element, $attribute)
        {
            return $8;
        }

        /**
        * Defines any custom element criteria attributes for this element type.
        *
        * @return array
        */
        public function defineCriteriaAttributes()
        {
            return array(
                '$9' => AttributeType::$10
            );
        }

        /**
        * Modifies an element query targeting elements of this type.
        *
        * @param DbCommand $query
        * @param ElementCriteriaModel $criteria
        * @return mixed
        */
        public function modifyElementsQuery(DbCommand $query, ElementCriteriaModel $criteria)
        {
            $11;
        }

        /**
        * Populates an element model based on a query result.
        *
        * @param array $row
        * @return array
        */
        public function populateElementModel($row)
        {
            return $12Model::populateModel($row);
        }

        /**
        * Returns the HTML for an editor HUD for the given element.
        *
        * @param BaseElementModel $element
        * @return string
        */
        public function getEditorHtml(BaseElementModel $element)
        {
            // Everything else
            $html .= parent::getEditorHtml($element);

            return $html;
        }
    }
    """
